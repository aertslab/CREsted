name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 5 1,15 * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -e {0} # -e to fail on error

    strategy:
      fail-fast: false
      matrix:
        include:
          # TensorFlow Test Cases
          - os: ubuntu-latest
            python: "3.9"
            backend: "tensorflow"
          - os: ubuntu-latest
            python: "3.11"
            backend: "tensorflow"
          - os: ubuntu-latest
            python: "3.11"
            backend: "tensorflow"
            pip-flags: "--pre"
            name: "TensorFlow PRE-RELEASE DEPENDENCIES"
          # PyTorch Test Cases
          - os: ubuntu-latest
            python: "3.9"
            backend: "pytorch"
          - os: ubuntu-latest
            python: "3.11"
            backend: "pytorch"
          - os: ubuntu-latest
            python: "3.11"
            backend: "pytorch"
            pip-flags: "--pre"
            name: "PyTorch PRE-RELEASE DEPENDENCIES"

    name: ${{ matrix.name }} Python ${{ matrix.python }} Backend ${{ matrix.backend }}

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}
      BACKEND: ${{ matrix.backend }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"
          cache-dependency-path: "**/pyproject.toml"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip wheel

      - name: Install dependencies for ${{ matrix.backend }}
        run: |
          if [ "${{ matrix.backend }}" = "tensorflow" ]; then
            pip install ${{ matrix.pip-flags }} "tensorflow" ".[dev,test]";
          elif [ "${{ matrix.backend }}" = "pytorch" ]; then
            pip install ${{ matrix.pip-flags }} "torch" ".[dev,test]";
          fi

      - name: Run tests
        env:
          MPLBACKEND: agg
          PLATFORM: ${{ matrix.os }}
          DISPLAY: :42
        run: |
          coverage run -m pytest -v --color=yes

      - name: Report coverage
        run: |
          coverage report

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        env:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: aertslab/CREsted
